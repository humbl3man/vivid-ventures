generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider = "zod-prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.

model User {
  id              String    @id
  name            String
  username        String    @unique
  hashed_password String
  sessions        Session[]
  role            Role      @default(USER)
  avatar_url      String?
  cart            Cart?
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Experience {
  id          BigInt    @id @default(autoincrement())
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime  @updatedAt @map("updated_at")
  name        String
  description String
  price       Int
  imageUrl    String    @map("image_url")
  isAvailable Boolean   @default(true)
  cartItem    CartItem?
}

model Cart {
  id     BigInt     @id @unique @default(autoincrement())
  name   String?
  user   User       @relation(fields: [userId], references: [id])
  userId String     @unique
  items  CartItem[]
}

model CartItem {
  id           BigInt     @id @default(autoincrement())
  quantity     Int
  Cart         Cart       @relation(fields: [cartId], references: [id])
  cartId       BigInt
  experienceId BigInt     @unique
  experience   Experience @relation(fields: [experienceId], references: [id])
}
